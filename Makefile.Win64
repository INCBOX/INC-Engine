CXX = g++
CXXFLAGS = -std=c++17 -Wall -Wextra -g
LINKFLAGS = -static-libstdc++ -static-libgcc

# Shared global includes
GLOBAL_INCLUDES = -Isrc -Isrc/thirdparty/nlohmann/include

# Per-module includes
LAUNCHER_INCLUDES = $(GLOBAL_INCLUDES)
ENGINE_INCLUDES = $(GLOBAL_INCLUDES) -Isrc/thirdparty/sdl2/include/SDL2 -Isrc/thirdparty/glad/include
FILESYSTEM_INCLUDES = $(GLOBAL_INCLUDES)

# Output directory
BIN_DIR = bin
$(shell mkdir -p $(BIN_DIR))


# Auto-discover sources
FILESYSTEM_SRC = $(wildcard src/filesystem/*.cpp)
ENGINE_SRC = $(shell find src/engine -name "*.cpp") \
             $(shell find src/thirdparty/glad/src -name "*.c")

LAUNCHER_SRC = src/launcher/launcher.cpp

FILESYSTEM_OBJ = $(patsubst src/filesystem/%.cpp, $(BIN_DIR)/filesystem_%.o, $(FILESYSTEM_SRC))
ENGINE_OBJ = $(patsubst src/engine/%.cpp, $(BIN_DIR)/engine_%.o, $(filter %.cpp, $(ENGINE_SRC))) \
             $(patsubst src/thirdparty/glad/src/%.c, $(BIN_DIR)/glad_%.o, $(filter %.c, $(ENGINE_SRC)))
LAUNCHER_OBJ = $(patsubst src/launcher/%.cpp, $(BIN_DIR)/launcher_%.o, $(LAUNCHER_SRC))


# Generic compile rules
$(BIN_DIR)/launcher_%.o: src/launcher/%.cpp
	$(CXX) $(CXXFLAGS) $(LAUNCHER_INCLUDES) -c $< -o $@
	$(CXX) $(CXXFLAGS) $(LAUNCHER_INCLUDES) -c $< -o $@

$(BIN_DIR)/filesystem_%.o: src/filesystem/%.cpp
	$(CXX) $(CXXFLAGS) $(FILESYSTEM_INCLUDES) -c $< -o $@

$(BIN_DIR)/engine_%.o: src/engine/%.cpp
	$(CXX) $(CXXFLAGS) $(ENGINE_INCLUDES) -c $< -o $@

$(BIN_DIR)/glad_%.o: src/thirdparty/glad/src/%.c
	$(CXX) $(CXXFLAGS) $(ENGINE_INCLUDES) -c $< -o $@

# Targets
all: INC.exe $(BIN_DIR)/engine.dll $(BIN_DIR)/filesystem_stdio.dll

$(BIN_DIR)/engine.dll: $(ENGINE_OBJ)
	$(CXX) -shared -o $@ $^ $(ENGINE_INCLUDES) $(LINKFLAGS) -lopengl32 -Lsrc/thirdparty/sdl2/lib -lSDL2

$(BIN_DIR)/filesystem_stdio.dll: $(FILESYSTEM_OBJ)
	$(CXX) -shared -o $@ $^ $(FILESYSTEM_INCLUDES) $(LINKFLAGS)

INC.exe: $(LAUNCHER_OBJ)
	$(CXX) -o $@ $^ $(LAUNCHER_INCLUDES) $(LINKFLAGS)

clean:
	rm -f $(BIN_DIR)/*.o $(BIN_DIR)/*.dll INC.exe
